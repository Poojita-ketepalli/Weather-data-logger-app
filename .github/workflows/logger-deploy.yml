name: Logger App CI/CD on GitHub Actions

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -uroot -p${{ secrets.MYSQL_PASSWORD }} --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Wait for MySQL to be Ready
        run: |
          echo "⏳ Waiting for MySQL to be ready..."
          for i in {1..60}; do
            if mysqladmin ping -h127.0.0.1 -uroot -p"${{ secrets.MYSQL_PASSWORD }}" --silent; then
              echo "✅ MySQL is up and running!"
              break
            fi
            echo "Waiting... ($i/60)"
            sleep 2
          done

      - name: Verify MySQL Connection
        run: |
          mysql -h 127.0.0.1 -uroot -p"${{ secrets.MYSQL_PASSWORD }}" -e "SHOW DATABASES;"

      - name: Build with Maven
        run: mvn clean install
        env:
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: logger-jar
          path: target/*.jar

      - name: Download Terraform Output
        uses: actions/download-artifact@v4
        with:
          name: tf-output

      - name: Extract EC2 Public IP
        id: extract-ip
        run: |
          IP=$(jq -r '.public_ip.value' tf-output.json)
          echo "EC2_IP=$IP" >> $GITHUB_ENV

      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ env.EC2_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: "target/*.jar"
          target: "~/logger-app/"

      - name: Run App on EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ env.EC2_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            pkill -f 'java' || true
            nohup java -jar ~/logger-app/*.jar > logger.log 2>&1 &
