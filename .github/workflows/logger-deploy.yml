name: Logger App CI/CD on github actions

on:
  push:
    branches:
      - main # This triggers the workflow on push to main branch

jobs:
  build-and-deply:
    runs-on: ubuntu-latest # The github actions runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        # This checks out our github repo code so we can build it.

      - name: Setup java
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
        # This installs java 17 (used by spring boot) on the github actions runner

      - name: Build with maven
        run: mvn clean install
        # This build our spring boot application and creates a .jar file in /target folder

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: logger-jar
          path: target/*.jar
        # Stores the built JAR temporarily in the github actions environment

      - name: Download Terraform Output
        uses: actions/download-artifact@v3
        with:
          name: tf-output

      - name: Extract EC2 Public IP
        id: extract-ip
        run: |
          IP=$(jq -r '.public_ip.value' tf-output.json)
          echo "EC2_IP=$IP" >> $GITHUB_ENV

      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ env.EC2_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: "target/*.jar"
          target: "~/logger-app/"

      - name: Run App on EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ env.EC2_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            pkill -f 'java' || true
            nohup java -jar ~/logger-app/*.jar > logger.log 2>&1 &