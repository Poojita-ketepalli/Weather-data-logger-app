name: Logger App CI/CD on github actions

on:
  workflow_run:
    workflows: [ "Infrastructure as code" ]
    types:
      - completed

jobs:
  build-and-deply:
    runs-on: ubuntu-latest # The github actions runner

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
        ports:
          - 3306:3306

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        # This checks out our github repo code so we can build it.

      - name: Setup java
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
        # This installs java 17 (used by spring boot) on the github actions runner

      - name: Debug Secrets (Check If They Exist)
        run: |
          echo "MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}"
          echo "MYSQL_PASSWORD: (hidden)"

      - name: Wait for MySQL to be Ready
        run: |
          echo "Waiting for MySQL to be ready..."
          for i in {1..60}; do
            if mysqladmin ping -h127.0.0.1 -uroot -p"${{ secrets.MYSQL_PASSWORD }}" --silent; then
              echo "✅ MySQL is up and running!"
              break
            fi
            echo "⏳ Waiting for MySQL... ($i/60)"
            sleep 2
          done

      - name: Verify MySQL Connection
        run: |
          mysql -h 127.0.0.1 -uroot -p"${{ secrets.MYSQL_PASSWORD }}" -e "SHOW DATABASES;"

      - name: Build with maven
        run: mvn clean install
        # This build our spring boot application and creates a .jar file in /target folder

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: logger-jar
          path: target/*.jar
        # Stores the built JAR temporarily in the github actions environment

      - name: Download artifact using GitHub CLI
        run: |
          gh run download -n terraform-output
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: Rename tf-output.json if needed
        run: |
          if [ -f tf-output.json ]; then
            echo "✅ File is already in current dir"
          elif [ -f terraform-output.json ]; then
            mv terraform-output.json tf-output.json
          else
            echo "❌ tf-output.json not found!"
            exit 1
          fi

      - name: Show contents of tf-output.json
        run: cat tf-output.json

      - name: Extract EC2 Public IP
        id: extract-ip
        run: |
          IP=$(jq -r '.public_ip.value' tf-output.json)
          echo "✅ IP fetched: $IP"
          echo "EC2_IP=$IP" >> $GITHUB_ENV
      

      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ env.EC2_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: "target/*.jar"
          target: "~/logger-app/"

      - name: Run App on EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ env.EC2_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            pkill -f 'java' || true
            nohup java -jar ~/logger-app/*.jar > logger.log 2>&1 &
