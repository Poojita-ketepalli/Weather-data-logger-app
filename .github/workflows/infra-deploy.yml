name: Logger App CI/CD with Terraform and Deployment

on:
  push:
    branches:
      - main  # This triggers the workflow on push to the main branch

jobs:
  infra-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: '1.1.0'

      - name: Initialize Terraform
        run: terraform init

      - name: Apply Terraform Infrastructure
        run: terraform apply -auto-approve

      - name: Generate Terraform Output as JSON
        run: terraform output -json > tf-output.json

      - name: Upload Terraform Output as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-output
          path: tf-output.json

  logger-deploy:
    runs-on: ubuntu-latest
    needs: infra-deploy  # Ensures that this job runs only after the infrastructure deploy is successful

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean install

      - name: Download Terraform Output
        uses: actions/download-artifact@v4
        with:
          name: terraform-output

      - name: Move terraform output to current dir
        run: |
          mv terraform-output/tf-output.json tf-output.json

      - name: Extract EC2 Public IP
        id: extract-ip
        run: |
          IP=$(jq -r '.public_ip.value' tf-output.json)
          echo "EC2_IP=$IP" >> $GITHUB_ENV

      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ env.EC2_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: "target/*.jar"
          target: "~/logger-app/"

      - name: Run App on EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ env.EC2_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            pkill -f 'java' || true
            nohup java -jar ~/logger-app/*.jar > logger.log 2>&1 &
