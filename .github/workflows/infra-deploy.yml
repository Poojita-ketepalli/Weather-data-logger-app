name: Infrastructure and Logger App Deployment

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: Terraform Apply
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: infra

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
        ports:
          - 3306:3306

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Save Terraform output to JSON
        run: terraform output -json > tf-output.json

      - name: Print raw contents of tf-output.json
        run: |
          echo "----- tf-output.json contents -----"
          cat tf-output.json
          echo "-----------------------------------"

      - name: Move output to root for upload
        run: mv tf-output.json ../tf-output.json

      - name: Upload tf-output.json Artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-output
          path: tf-output.json

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
      - name: Install Terraform
        run: |
          echo "Downloading Terraform..."
          curl -LO https://releases.hashicorp.com/terraform/1.6.0/terraform_1.6.0_linux_amd64.zip
          echo "Verifying download..."
          ls -lh terraform_1.6.0_linux_amd64.zip
          unzip terraform_1.6.0_linux_amd64.zip
          sudo mv terraform /usr/local/bin/
          terraform --version

      - name: Wait for MySQL to be Ready
        run: |
          echo "Waiting for MySQL..."
          for i in {1..60}; do
            if mysqladmin ping -h127.0.0.1 -uroot -p"${{ secrets.MYSQL_PASSWORD }}" --silent; then
              echo "✅ MySQL is up!"
              break
            fi
            echo "⏳ Waiting... ($i/60)"
            sleep 2
          done

      - name: Verify MySQL Connection
        run: |
          mysql -h 127.0.0.1 -uroot -p"${{ secrets.MYSQL_PASSWORD }}" -e "SHOW DATABASES;"

      - name: Build App with Maven
        run: mvn clean install

      - name: Upload Built Jar
        uses: actions/upload-artifact@v4
        with:
          name: logger-jar
          path: target/*.jar

      - name: Download Terraform Output Artifact
        uses: actions/download-artifact@v4
        with:
          name: terraform-output

      - name: Extract EC2 Public IP
        id: extract-ip
        run: |
          echo "Parsing terraform output for public_ip"
          IP=$(terraform output -raw public_ip)
          echo "✅ Extracted IP: $IP"
          echo "EC2_IP=$IP" >> $GITHUB_ENV

      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ env.EC2_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: "target/*.jar"
          target: "~/logger-app/"

      - name: Run App on EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ env.EC2_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            pkill -f 'java' || true
            nohup java -jar ~/logger-app/*.jar > logger.log 2>&1 &


